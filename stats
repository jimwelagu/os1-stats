#!/bin/bash

if [ $# -ne 2 ] 
then
	printf "./stats {-rows|-cols} [input_file]\n" 1>&2
	exit 1
fi

if [ ! -e $2 ]
then
	echo "./stats: cannot read $2" 1>&2
	exit 1
fi	

if [[ "$1" == -r* ]]
then
	printf "Average\tMedian\n"
	
	# Reads every line in file until end of file
	while read line
	do
		sum=0	# Initialize sum that will be updated for each line
		n=0 # total amount of numbers in a row
		TMP="temp$$" # TMP stores a temporary file name with PID
		median=0 # Median
		mean=0 # Mean

		trap "rm -f $TMP; echo 'CTRL+C recieved, exiting'; exit 1" SIGINT

		for number in $line
		do
			sum=$(expr $sum + $number)
			n=$(expr $n + 1)
			echo $number >> $TMP 
		done

		sort -n $TMP -o $TMP
		
		median=$(expr \( $n / 2 \) + 1)
		median=$(head -$median $TMP | tail -1)
	
		mean=$(expr \( $sum + \( $n / 2 \) \) / $n)
		
		printf "$mean\t$median\n"	

		rm $TMP
	done < $2

elif [[ "$1" == -c* ]]
then

	TMP="temp$$"
	avgtmp="avg$$"
	medtmp="med$$"
	rows=$(cat $2 | wc -l)
	cols=0
	i=1
	sum=0
	mean=0
	median=0

	trap "rm -f $TMP $avgtmp $medtmp; echo 'CTRL+C recieved, exiting'; exit 1" SIGINT

	read line < $2
	cols=$(echo $line | wc -w)
	(( cols++ ))
	
	touch $avgtmp
	touch $medtmp

	while test $i -ne $cols
	do
		cut -f $i $2 > $TMP 

		while read num 
		do 
			sum=$(expr $sum + $num)
		done < $TMP		
		
		sort -n $TMP -o $TMP

		mean=$(expr \( $sum + \( $rows / 2 \) \) / $rows)

		median=$(expr \( $rows / 2 \) + 1)
		median=$(head -$median $TMP | tail -1)

		echo $mean >> $avgtmp
		echo $median >> $medtmp
		
		rm $TMP
		sum=0
		i=$(expr $i + 1)
		curr_col=$(expr $curr_col + 1)
	
	done	
	
	printf "Averages:\n"
	while read num
	do
		printf "$num\t"
	done < $avgtmp
	printf "\n"

	printf "Medians: \n"
	while read num
	do
		printf "$num\t"
	done < $medtmp
	printf "\n"

	rm $avgtmp $medtmp
else 
	printf "./stats {-rows|-cols} [input_file]\n" 1>&2
	exit 1
fi
